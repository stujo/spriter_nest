== README

This README would normally document whatever steps are necessary to get the
application up and running.

Things you may want to cover:

* Ruby version

* System dependencies

* Configuration

* Database creation

* Database initialization

* How to run the test suite

* Services (job queues, cache servers, search engines, etc.)

* Deployment instructions

* ...


Please feel free to use a different markup language if you do not plan to run
<tt>rake doc:app</tt>.

==notes on imgur oauth (docs https://api.imgur.com/oauth2)

authorization URL
https://api.imgur.com/oauth2/authorize?client_id=YOUR_CLIENT_ID&response_type=REQUESTED_RESPONSE_TYPE&state=APPLICATION_STATE

state variable useful for more specific redirects
response type is just going to be token, it's much more direct, pin leads to bad UX
client id is fairly straightforward.

png's up to 1meg in size will remain as png's and be lossless. Explore javascript manipulations and saving with pngs... this should continue to be the case well into the 400k pixel regime.

== nested array to canvas
don't be a pillock, that's easy

== canvas to png
http://stackoverflow.com/questions/923885/capture-html-canvas-as-gif-jpg-png-pdf

== png to canvas
http://stackoverflow.com/questions/8751020/how-to-get-a-pixels-x-y-coordinate-color-from-an-image

== notes on implementation
users have many projects
projects have many slides
projects have default slide proportions
projects have a color depth
slides have X by Y nested arrays with RGBA vectors as values(default is 0's).
slides belong to project

projects can select collections of frames to iterate over in animation mode
project can select color for new pixels
project can generate a new blank slide
project can generate a new slide copied from an old slide.
projects can save to png and be stored in imgur
projects can load from imgur

slides respond to #setAt which sets at the x-y coordinate a new rgba value.